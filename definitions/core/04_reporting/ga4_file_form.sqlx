config {
  type: "incremental",
  //materialized: true ,
  tags: [dataform.projectConfig.vars.GA4_DATASET,"file_form","prod"],
  database: dataform.projectConfig.vars.OUTPUT_PROJECT,
  schema: dataform.projectConfig.vars.REPORTING_DATASET,
  name:"ga4_file_form",
  description: "File downloads / form submits summary table",
  bigquery: {
    partitionBy: "event_date",
    //clusterBy: ["event_name", "event_id"],
    labels: require("includes/core/helpers.js").helpers.storageLabels()
  },
    columns: require("includes/core/documentation/helpers.js").ga4Events
}

js {
    const { helpers } = require("includes/core/helpers");
    const config = helpers.getConfig();
}

  -- ==============================
  --            PRE-OPERATIONS 
  -- ==============================
/* incrementality */
pre_operations {
  declare date_checkpoint DATE;
--   set @@query_label = "${helpers.executionLabels()}";
  set date_checkpoint = (
    ${when(incremental(),
      `select
        coalesce(max(event_date)+1, date('${config.GA4_START_DATE}'))
      from ${self()}`,
    `select date('${config.GA4_START_DATE}')`)}   /* the default, when it's not incremental */
  );

}

  -- ==============================
  --        POST-OPERATIONS
  -- ==============================
post_operations {
    ${when(incremental(),
    `EXPORT DATA OPTIONS(
        uri=(CONCAT('gs://${config.GCS_BUCKET}/',  FORMAT_DATE('%Y%m%d' , date_checkpoint), '_gcp_', '${name()}', '_*.parquet')), 
        format='PARQUET',
        overwrite=true
       ) AS

          SELECT DISTINCT * FROM (        -- Overhead SELECT DISTINCT and LIMIT are aded to fix the issue with producting multiple export files insteand of one
          SELECT * FROM ${self()} WHERE event_date = date_checkpoint
          )
          ORDER BY _run_timestamp LIMIT 1000000000000000000; `
    )}
}



SELECT current_timestamp() as _run_timestamp, -- indicates when the row was last run
        * EXCEPT(session_id, user_pseudo_id, engagement_time_msec, 
        form_submission_attempt_count, 
        form_submission_complete_count,
        form_submission_failure_count,
        file_download_count),

      COUNT(DISTINCT session_id) sessions,
      COUNT(DISTINCT user_pseudo_id) users,
      SUM(file_download_count) file_download_count,
      SUM(form_submission_attempt_count) form_submission_attempt_count,
      SUM(form_submission_complete_count) form_submission_complete_count,
      SUM(form_submission_failure_count) form_submission_failure_count,
      SUM(engagement_time_msec)/1000 engagement_time_sec
FROM (
      SELECT * FROM (
        SELECT  
        event_date, event_name, session_id, user_pseudo_id, 
        continent, country, region, city, 
        page_location, cross_channel_campaign.default_channel_group,

        location, header,
        file_name, file_extension,  
        click_text, click_url, link_text, link_url,
        form_name,
    
        --Metrics
        form_submission_attempt_count, 
        form_submission_complete_count,
        form_submission_failure_count,
        file_download_count,
        engagement_time_msec

        FROM ${ref("ga4_engagements")}

      )
        PIVOT 
        (
          COUNT(event_name) FOR event_name IN ("file_download", "form_submission_complete", "form_submission_start")
        )
)
group by all
