config {
  type: "incremental",
  tags: [dataform.projectConfig.vars.GA4_DATASET,"provider","prod"],
  database: dataform.projectConfig.vars.OUTPUT_PROJECT,
  schema: dataform.projectConfig.vars.REPORTING_DATASET,
  name:"ga4_provider",
  description: "Provider events table: with metrics",
  bigquery: {
    partitionBy: "event_date",
    // clusterBy: ["event_name", "event_id"],
    labels: require("includes/core/helpers.js").helpers.storageLabels()
  },
    columns: require("includes/core/documentation/helpers.js").ga4Events
}
js {
  const { helpers } = require("includes/core/helpers");
  const config = helpers.getConfig();

  var dateFilter = "" ;
  if (dataform.projectConfig.vars.RUN_FOR_DATE != "") {
    dateFilter = ` event_date = date_checkpoint `;
  } else { 
    dateFilter = ` event_date >= date_checkpoint `;
  }
}


  -- ==============================
  --            PRE OPERATIONS
  -- ==============================

/* incrementality */
pre_operations {
  declare date_checkpoint DATE;
    ---  // this triple dash means something in dataform?

  -- this is for when we need to refill for certain date
  IF '${dataform.projectConfig.vars.RUN_FOR_DATE}' <> 'undefined' THEN 
    set date_checkpoint = (
      ${when(incremental(), 
          `select date('${dataform.projectConfig.vars.RUN_FOR_DATE}')`, 
          `select date('${config.GA4_START_DATE}')`
           )
      });
      -- delete some older data, since this may be updated later by GA4
      ${
        when(incremental(),
          `delete from ${self()} where event_date = date_checkpoint;`
          )
      }
  ELSE
      set date_checkpoint = (
        ${when(incremental(),
        `select coalesce(max(event_date)+1, date('${config.GA4_START_DATE}'))
            from ${self()} where is_final is true`,
        `select date('${config.GA4_START_DATE}')`)} 
      );
      -- delete some older data, since this may be updated later by GA4
      ${
        when(incremental(),
          `delete from ${self()} where event_date >= date_checkpoint;`
          )
      }
    END IF;
}

  -- ==============================
  --        POST-OPERATIONS
  -- ==============================
post_operations {
    ${when(incremental(),
    `EXPORT DATA OPTIONS(
        uri=(CONCAT('gs://${config.GCS_BUCKET}/',  FORMAT_DATE('%Y%m%d' , date_checkpoint), '_gcp_', '${name()}', '_*.parquet')), 
        format='PARQUET',
        overwrite=true
       ) AS

          SELECT DISTINCT * FROM (        -- Overhead SELECT DISTINCT and LIMIT are aded to fix the issue with producting multiple export files insteand of one
          SELECT * FROM ${self()} WHERE event_date = date_checkpoint
          )
          ORDER BY _run_timestamp LIMIT 1000000000000000000; `
    )}
}

  -- ==============================
  --            QUERY
  -- ==============================

SELECT current_timestamp() as _run_timestamp, 
        * EXCEPT(session_id, user_pseudo_id, engagement_time_msec, num_search_results ),

      COUNT(DISTINCT session_id) sessions,
      COUNT(DISTINCT user_pseudo_id) users,
      SUM(num_search_results) num_search_results,
      SUM(engagement_time_msec)/1000 engagement_time_sec
FROM (
        SELECT  
        event_date, session_id, user_pseudo_id, event_name,
        continent, country, region, city, page_location, 
        cross_channel_campaign.default_channel_group,
        location, header, 
        cta_text, cta_url,

        provider_procedure, 
        provider_search,
        provider_distance,
        sort_by,
        provider_search_result,
        provider_search_result_selected_count,

        search_term,
        search_type,
        search_filter,
        search_result,

        -- Metrics
        num_search_results,
        engagement_time_msec,

        is_final


        FROM ${ref("ga4_engagements")}
        where event_date >= date_checkpoint
        )
        PIVOT 
        (
          COUNT(*) FOR event_name IN ("provider_locator_cta_click",
                                    "provider_locator_tel_click",
                                    "provider_locator_mailto_click",
                                    "provider_locator_get_directions_click",
                                    "provider_locator_search",
                                    "provider_locator_search_result_selected",
                                    "provider_locator_view_search_results")
          )
        group by all


  --  post_operations {
  -- ${when(incremental(),
  --   `EXPORT DATA OPTIONS(
  --       uri=(CONCAT('gs://${dataform.projectConfig.vars.GCS_BUCKET}/', date_checkpoint, '/${self().name}_',date_checkpoint, '_*.json')), 
  --       format='JSON',
  --       overwrite=true,
  --       header=true
  --      ) AS

  --         SELECT DISTINCT * FROM (        -- Overhead SLEECT DISTINCT and LIMIT are aded to fix the issue with producting multiple export files insteand of one
  --         SELECT * FROM ${self()} WHERE event_date = date_checkpoint
  --         )
  --         ORDER BY _run_timestamp LIMIT 1000000000000000000`
  -- )
  -- }
