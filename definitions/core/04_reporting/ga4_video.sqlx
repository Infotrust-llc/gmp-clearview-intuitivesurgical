 /*
  This file is part of "GMP Clearview" package.
  Copyright (C)  2025 Infotrust 
  Alina Zilbergerts, Trish Dothkar,
  -- */

config {
  type: "incremental",
  tags: [dataform.projectConfig.vars.GA4_DATASET,"video","prod"],
  database: dataform.projectConfig.vars.OUTPUT_PROJECT,
  schema: dataform.projectConfig.vars.REPORTING_DATASET,
  name: "ga4_video",
  description: "Video events table: with metrics",
  bigquery: {
    partitionBy: "event_date",
    //clusterBy: ["event_name", "event_id"],
    labels: require("includes/core/helpers.js").helpers.storageLabels()
  },
    columns: require("includes/core/documentation/helpers.js").ga4Events
}

js {
    const { helpers } = require("includes/core/helpers");
    const config = helpers.getConfig();

    var dateFilter = "" ;
  if (dataform.projectConfig.vars.RUN_FOR_DATE != "") {
    dateFilter = ` event_date = date_checkpoint `;
  } else { 
    dateFilter = ` event_date >= date_checkpoint `;
  }
}

  -- ==============================
  --            PRE-OPERATIONS 
  -- ==============================
/* incrementality */
pre_operations {
  declare date_checkpoint DATE;
    ---  // this triple dash means something in dataform?

  -- this is for when we need to refill for certain date
  IF '${dataform.projectConfig.vars.RUN_FOR_DATE}' <> 'undefined' THEN 
    set date_checkpoint = (
      ${when(incremental(), 
          `select date('${dataform.projectConfig.vars.RUN_FOR_DATE}')`, 
          `select date('${config.GA4_START_DATE}')`
           )
      });
      -- delete some older data, since this may be updated later by GA4
      ${
        when(incremental(),
          `delete from ${self()} where event_date = date_checkpoint;`
          )
      }
  ELSE
      set date_checkpoint = (
        ${when(incremental(),
        `select coalesce(max(event_date)+1, date('${config.GA4_START_DATE}'))
            from ${self()} where is_final is true`,
        `select date('${config.GA4_START_DATE}')`)} 
      );
      -- delete some older data, since this may be updated later by GA4
      ${
        when(incremental(),
          `delete from ${self()} where event_date >= date_checkpoint;`
          )
      }
    END IF;
}
  -- ==============================
  --        POST-OPERATIONS
  -- ==============================
post_operations {
    ${when(incremental(),
    `EXPORT DATA OPTIONS(
        uri=(CONCAT('gs://${config.GCS_BUCKET}/',  FORMAT_DATE('%Y%m%d' , date_checkpoint), '_gcp_', '${name()}', '_*.parquet')), 
        format='PARQUET',
        overwrite=true
       ) AS

          SELECT DISTINCT * FROM (        -- Overhead SELECT DISTINCT and LIMIT are aded to fix the issue with producting multiple export files insteand of one
          SELECT * FROM ${self()} WHERE event_date = date_checkpoint
          )
          ORDER BY _run_timestamp LIMIT 1000000000000000000; `
    )}
}

  -- ==============================
  --           QUERY
  -- ==============================

SELECT current_timestamp() as _run_timestamp, 
      * EXCEPT(session_id, user_pseudo_id, engagement_time_msec, video_impression_count,
        video_complete_count,  video_start_count, video_watch_time, video_start, video_complete),

        COUNT(DISTINCT session_id) sessions,
        COUNT(DISTINCT user_pseudo_id) users,
        -- SUM(video_impression_count) video_impression_count,
        SUM(video_watch_time) video_watch_time,
        SUM(video_start_count) video_start_count,
        SUM(video_complete_count) video_complete_count,
        SUM(engagement_time_msec)/1000 engagement_time_sec,
        SUM(video_start) video_start,
        SUM(video_complete) video_complete,

FROM (
    SELECT * FROM  (
        SELECT  
        event_name,
        event_date, session_id, user_pseudo_id, 
        continent, country, region, city, 
        page_location, cross_channel_campaign.default_channel_group,

        location, header,
        video_title, 
        video_provider,
        video_url,
        video_play_type,
        video_duration,
        video_percent,
        video_current_time,
    
        --Metrics
        video_impression_count,
        video_complete_count,
        video_start_count,
        video_watch_time,
        engagement_time_msec,
        is_final

        FROM ${ref("ga4_engagements")}
        WHERE event_name IN ("video_start", "video_complete")
    )
        PIVOT 
        (
          COUNT(*) FOR event_name IN ("video_start", "video_complete")
        )
)
group by all
